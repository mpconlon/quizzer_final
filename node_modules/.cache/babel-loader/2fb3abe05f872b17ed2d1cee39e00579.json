{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matth\\\\quizzer_start\\\\src\\\\bad-components\\\\ColoredBox.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const COLORS = [\"red\", \"blue\", \"green\"];\nconst DEFAULT_COLOR_INDEX = 0;\n\nfunction ChangeColor(_ref) {\n  let {\n    colorIndex,\n    setColorIndex\n  } = _ref;\n  // const [colorIndex, setColorIndex] = useState<number>(DEFAULT_COLOR_INDEX);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: () => setColorIndex((1 + colorIndex) % COLORS.length),\n    children: \"Next Color\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ChangeColor;\n\nfunction ColorPreview(_ref2) {\n  let {\n    currentColor\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"colored-box\",\n    style: {\n      width: \"50px\",\n      height: \"50px\",\n      backgroundColor: currentColor,\n      display: \"inline-block\",\n      verticalAlign: \"bottom\",\n      marginLeft: \"5px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = ColorPreview;\nexport function ColoredBox() {\n  _s();\n\n  const [colorIndex, setColorIndex] = useState(DEFAULT_COLOR_INDEX);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Colored Box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"The current color is: \", COLORS[colorIndex]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ChangeColor, {\n        setColorIndex: setColorIndex,\n        colorIndex: colorIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ColorPreview, {\n        currentColor: COLORS[colorIndex]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ColoredBox, \"gJ18q1rvqLRQQ7FCsio3s8ENqAI=\");\n\n_c3 = ColoredBox;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ChangeColor\");\n$RefreshReg$(_c2, \"ColorPreview\");\n$RefreshReg$(_c3, \"ColoredBox\");","map":{"version":3,"sources":["C:/Users/matth/quizzer_start/src/bad-components/ColoredBox.tsx"],"names":["React","useState","Button","COLORS","DEFAULT_COLOR_INDEX","ChangeColor","colorIndex","setColorIndex","length","ColorPreview","currentColor","width","height","backgroundColor","display","verticalAlign","marginLeft","ColoredBox"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAEA,OAAO,MAAMC,MAAM,GAAG,CAAC,KAAD,EAAQ,MAAR,EAAgB,OAAhB,CAAf;AACP,MAAMC,mBAAmB,GAAG,CAA5B;;AAOA,SAASC,WAAT,OAGiC;AAAA,MAHZ;AACjBC,IAAAA,UADiB;AAEjBC,IAAAA;AAFiB,GAGY;AAC7B;AACA,sBACI,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMA,aAAa,CAAC,CAAC,IAAID,UAAL,IAAmBH,MAAM,CAACK,MAA3B,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;KAVQH,W;;AAYT,SAASI,YAAT,QAA+E;AAAA,MAAzD;AAAEC,IAAAA;AAAF,GAAyD;AAC3E,sBACI;AACI,mBAAY,aADhB;AAEI,IAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAAE,MADJ;AAEHC,MAAAA,MAAM,EAAE,MAFL;AAGHC,MAAAA,eAAe,EAAEH,YAHd;AAIHI,MAAAA,OAAO,EAAE,cAJN;AAKHC,MAAAA,aAAa,EAAE,QALZ;AAMHC,MAAAA,UAAU,EAAE;AANT;AAFX;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;MAdQP,Y;AAgBT,OAAO,SAASQ,UAAT,GAAmC;AAAA;;AACtC,QAAM,CAACX,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAASG,mBAAT,CAA5C;AACA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,2CAA6BD,MAAM,CAACG,UAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,8BACI,QAAC,WAAD;AACI,QAAA,aAAa,EAAEC,aADnB;AAEI,QAAA,UAAU,EAAED;AAFhB;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,YAAD;AAAc,QAAA,YAAY,EAAEH,MAAM,CAACG,UAAD;AAAlC;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAfeW,U;;MAAAA,U","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport const COLORS = [\"red\", \"blue\", \"green\"];\r\nconst DEFAULT_COLOR_INDEX = 0;\r\n\r\ninterface colorProperties {\r\n    colorIndex: number;\r\n    setColorIndex: (colorIndex: number) => void;\r\n}\r\n\r\nfunction ChangeColor({\r\n    colorIndex,\r\n    setColorIndex\r\n}: colorProperties): JSX.Element {\r\n    // const [colorIndex, setColorIndex] = useState<number>(DEFAULT_COLOR_INDEX);\r\n    return (\r\n        <Button onClick={() => setColorIndex((1 + colorIndex) % COLORS.length)}>\r\n            Next Color\r\n        </Button>\r\n    );\r\n}\r\n\r\nfunction ColorPreview({ currentColor }: { currentColor: string }): JSX.Element {\r\n    return (\r\n        <div\r\n            data-testid=\"colored-box\"\r\n            style={{\r\n                width: \"50px\",\r\n                height: \"50px\",\r\n                backgroundColor: currentColor,\r\n                display: \"inline-block\",\r\n                verticalAlign: \"bottom\",\r\n                marginLeft: \"5px\"\r\n            }}\r\n        ></div>\r\n    );\r\n}\r\n\r\nexport function ColoredBox(): JSX.Element {\r\n    const [colorIndex, setColorIndex] = useState<number>(DEFAULT_COLOR_INDEX);\r\n    return (\r\n        <div>\r\n            <p>Colored Box</p>\r\n            <span>The current color is: {COLORS[colorIndex]}</span>\r\n            <div>\r\n                <ChangeColor\r\n                    setColorIndex={setColorIndex}\r\n                    colorIndex={colorIndex}\r\n                ></ChangeColor>\r\n                <ColorPreview currentColor={COLORS[colorIndex]}></ColorPreview>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}