{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matth\\\\quizzer_start\\\\src\\\\form-components\\\\CheckAnswer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CheckAnswer(_ref) {\n  _s();\n\n  let {\n    expectedAnswer\n  } = _ref;\n  const [answer, setAnswer] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Check Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formAnswer\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Your Answer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: answer,\n          onChange: event => setAnswer(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: answer === expectedAnswer ? \"✔️\" : \"❌\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CheckAnswer, \"nLE+xPgtaAaLwlMs7GM3CI4lZyQ=\");\n\n_c = CheckAnswer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckAnswer\");","map":{"version":3,"sources":["C:/Users/matth/quizzer_start/src/form-components/CheckAnswer.tsx"],"names":["React","useState","Form","CheckAnswer","expectedAnswer","answer","setAnswer","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,OAAO,SAASC,WAAT,OAIS;AAAA;;AAAA,MAJY;AACxBC,IAAAA;AADwB,GAIZ;AACZ,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAS,EAAT,CAApC;AACA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,6BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,YAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,UAAA,KAAK,EAAEI,MADX;AAEI,UAAA,QAAQ,EACJE,KADM,IAELD,SAAS,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd;AAJlB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAaI;AAAA,gBAAMJ,MAAM,KAAKD,cAAX,GAA4B,IAA5B,GAAmC;AAAzC;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GAvBeD,W;;KAAAA,W","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nexport function CheckAnswer({\r\n    expectedAnswer\r\n}: {\r\n    expectedAnswer: string;\r\n}): JSX.Element {\r\n    const [answer, setAnswer] = useState<string>(\"\");\r\n    return (\r\n        <div>\r\n            <h3>Check Answer</h3>\r\n            <div>\r\n                <Form.Group controlId=\"formAnswer\">\r\n                    <Form.Label>Your Answer:</Form.Label>\r\n                    <Form.Control\r\n                        value={answer}\r\n                        onChange={(\r\n                            event: React.ChangeEvent<HTMLInputElement>\r\n                        ) => setAnswer(event.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n            </div>\r\n            <div>{answer === expectedAnswer ? \"✔️\" : \"❌\"}</div>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}