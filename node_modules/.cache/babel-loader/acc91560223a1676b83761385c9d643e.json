{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matth\\\\quizzer_start\\\\src\\\\form-components\\\\MultipleChoiceQuestion.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MultipleChoiceQuestion(_ref) {\n  _s();\n\n  let {\n    options,\n    expectedAnswer\n  } = _ref;\n  const [choice, setChoice] = useState(options[0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Multiple Choice Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formMultipleChoice\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Answer: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          value: choice,\n          onChange: e => setChoice(e.target.value),\n          children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option,\n            children: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: choice === expectedAnswer ? \"✔️\" : \"❌\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MultipleChoiceQuestion, \"lGdQouEPRWvB7quGyRYflZ6hRP8=\");\n\n_c = MultipleChoiceQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleChoiceQuestion\");","map":{"version":3,"sources":["C:/Users/matth/quizzer_start/src/form-components/MultipleChoiceQuestion.tsx"],"names":["React","useState","Form","MultipleChoiceQuestion","options","expectedAnswer","choice","setChoice","e","target","value","map","option"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,OAAO,SAASC,sBAAT,OAMS;AAAA;;AAAA,MANuB;AACnCC,IAAAA,OADmC;AAEnCC,IAAAA;AAFmC,GAMvB;AACZ,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAASG,OAAO,CAAC,CAAD,CAAhB,CAApC;AAEA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,oBAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,MAAN;AACI,UAAA,KAAK,EAAEE,MADX;AAEI,UAAA,QAAQ,EAAGE,CAAD,IAAOD,SAAS,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAF9B;AAAA,oBAIKN,OAAO,CAACO,GAAR,CAAaC,MAAD,iBACT;AAAqB,YAAA,KAAK,EAAEA,MAA5B;AAAA,sBACKA;AADL,aAAaA,MAAb;AAAA;AAAA;AAAA;AAAA,kBADH;AAJL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAcI;AAAA,kBAAON,MAAM,KAAKD,cAAX,GAA4B,IAA5B,GAAmC;AAA1C;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GA9BeF,sB;;KAAAA,sB","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nexport function MultipleChoiceQuestion({\r\n    options,\r\n    expectedAnswer\r\n}: {\r\n    options: string[];\r\n    expectedAnswer: string;\r\n}): JSX.Element {\r\n    const [choice, setChoice] = useState<string>(options[0]);\r\n\r\n    return (\r\n        <div>\r\n            <h3>Multiple Choice Question</h3>\r\n            <div>\r\n                <Form.Group controlId=\"formMultipleChoice\">\r\n                    <Form.Label>Answer: </Form.Label>\r\n                    <Form.Select\r\n                        value={choice}\r\n                        onChange={(e) => setChoice(e.target.value)}\r\n                    >\r\n                        {options.map((option: string) => (\r\n                            <option key={option} value={option}>\r\n                                {option}\r\n                            </option>\r\n                        ))}\r\n                    </Form.Select>\r\n                </Form.Group>\r\n                <span>{choice === expectedAnswer ? \"✔️\" : \"❌\"}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}